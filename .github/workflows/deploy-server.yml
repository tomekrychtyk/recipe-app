name: Deploy Server to EC2

on:
  push:
    branches:
      - main
    paths:
      - "packages/server/**"
      - "packages/common/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug
        run: |
          pwd
          ls -la
          git status
          git branch

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: |
          cd packages/server
          pnpm prisma generate

      - name: Build common package
        run: |
          cd packages/common
          pnpm build
          cd ..

      - name: Type check server
        run: |
          cd packages/server
          pnpm tsc --noEmit

      - name: Build server
        run: |
          cd packages/server
          pnpm build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          echo -e "Host ec2\n\tHostName ${{ secrets.AWS_HOST }}\n\tUser ${{ secrets.AWS_USERNAME }}\n\tIdentityFile ~/.ssh/key.pem\n\tStrictHostKeyChecking no" > ~/.ssh/config

      - name: Deploy to EC2
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
        run: |
          # Create deployment package with common package
          cd packages/server
          mkdir -p deploy/packages/server
          mkdir -p deploy/packages/common

          # Copy server files
          cp -r dist package.json prisma deploy/packages/server/

          # Copy common package
          cp -r ../common/dist ../common/package.json deploy/packages/common/

          # Create root package.json for pnpm workspace
          echo '{
            "name": "food-recipe-app",
            "private": true,
            "workspaces": [
              "packages/*"
            ]
          }' > deploy/package.json

          # Create pnpm-workspace.yaml
          echo 'packages:
            - "packages/*"' > deploy/pnpm-workspace.yaml

          # Create .env file
          echo "DATABASE_URL=\"${DATABASE_URL}\"" > deploy/packages/server/.env
          echo "DIRECT_URL=\"${DIRECT_URL}\"" >> deploy/packages/server/.env

          # Create deployment archive
          cd deploy
          tar -czf ../deploy.tar.gz .
          cd ..

          # Copy files to EC2
          scp -i ~/.ssh/key.pem deploy.tar.gz ec2:~/server-deploy.tar.gz

          # Execute deployment commands
          ssh ec2 'bash -l -c "
            # Setup pnpm
            pnpm setup
            source ~/.bashrc
            
            # Stop existing server
            pm2 stop food-app-server || true
            
            # Clean up old deployment
            rm -rf ~/food-app-server
            mkdir -p ~/food-app-server
            
            # Extract new deployment
            tar -xzf server-deploy.tar.gz -C ~/food-app-server
            cd ~/food-app-server
            
            # Install dependencies
            pnpm install --prod
            cd packages/server
            pnpm add prisma@5.22.0 --save-dev
            
            # Generate Prisma client and run migrations
            npx prisma generate
            npx prisma migrate deploy
            
            # Start server
            cd ../..
            pm2 start packages/server/dist/index.js --name food-app-server
            
            # Clean up
            rm ~/server-deploy.tar.gz
          "'
